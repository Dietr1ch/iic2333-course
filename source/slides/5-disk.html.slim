---
title: Administración de Almacenamiento
layout: slide
---

section 
  h2 Sistemas de Disco

  section
    div <b>Memoria Secundaria</b>

    div Almacenamiento de alta capacidad

    ul
      li.fragment  Memoria secundaria
      li.fragment  Más lenta que almacenamiento principal
      li.fragment  Memoria no-volátil

  section
    div <b>Discos Magnéticos</b>

    ul
      li.fragment  <b>Brazos</b> (arms) se mueven juntos.
      li.fragment  <i>Platos</i> divididos en <i>tracks</i> circulares
      li.fragment  <b>Tracks</b> divididos en <i>sectores</i>
      li.fragment  Conjunto de <b>sectores</b> entre varios platos forman un <b>cilindro</b>
      li.fragment  Velocidades de rotación: 5400, 7200, 10000, 15000 RPM (rotaciones por minuto)

    div == image_tag '/images/figures/03-10_01.pdf.png', :width=>"50%"

  section

    div style="text-align:left;" Para un disco magnéticos, importa la <i>tasa de transferencia</i> de datos entre disco y memoria principal. (MB/sec)

    div style="text-align:left;" <b>Tiempo de posicionamiento</b> depende de:
    ul
      li.fragment  <b> Seek time</b>, tiempo de búsqueda, para mover el brazo hasta el cilindro buscado
      li.fragment  <b> Latencia rotacional</b>, tiempo necesario para que el sector buscado quede debajo del brazo
      li.fragment  Ambos del orden de <i>msec</i>

    div style="text-align:left;" Componentes:
    ul
      li.fragment  <b>Host controller</b> es parte del sistema computacional
      li.fragment  <b>Disk controller</b> es parte del disco
      li.fragment  S.O. hace solicitudes al <i>host controller</i>, el cual envía comandos al <i>disk controller</i>

  section

    div == image_tag '/images/figures/03-disks.png', :width=>"80%"

  section
    div Discos de estado sólido
    ul
      li.fragment  Sin <i>seek time</i> ni <i>latencia rotacional</i>
      li.fragment  Más rápidos
      li.fragment  Más costoso por MB
      li.fragment  Menor consumo eléctrico

  section
    div Discos se organizan como arreglos de <i>bloques lógicos</i>

    ul
      li.fragment  Bloques lógicos típicamente de 512 bytes
      li.fragment  Bloques lógicos se mapean a sectores
      li.fragment  Sector 0 es el primer sector del primer <i>track</i> del cilindro más externo

    div Conociendo número de platos, <i>tracks</i> (cilindros $\sim m \times 10^4$) y <i>sectores</i> ($\sim n \times 10^2$) es posible traducir bloque lógico a $\langle \mathit{plato}, \mathit{track}, \mathit{sector} \rangle$.

    ul
      li.fragment Aún hay que considerar densidad de sectores
      li.fragment Sectores de cilindros externos <i>pueden</i> tener más densidad que en sectores internos

  section
    div Discos pueden ser formateados en distintos niveles
    ul
      li.fragment <b>Formateo de bajo nivel</b> o <b>formateo físico</b>: crea estructura de sectores
      ul
        li.fragment  Sector: header + data + trailer (incluyendo ECC)
        li.fragment  ECC: Error-Correcting Code, calculado a partir de <i>data</i>
      li.fragment <b>Particionamiento</b>: agrupación de cilindros que son tratados como discos separados
      ul
        li.fragment  Tabla de particiones accesible desde un <b>Master Boot Record</b> en el primer sector
        li.fragment  Típicamente: 4 particiones primarias, o 3 primarias + 1 extendida
        li.fragment  Particiones contienen tipos de sistema de archivo
      li.fragment <b>Formateo lógico</b>: estructuras para <i>sistema de archivos</i>

section
  h2 Scheduling de accesos

  section
    div style="text-align:left;" S.O. efectúa solicitud indicando:
    ul
      li.fragment  Lectura o escritura
      li.fragment  Dirección de disco
      li.fragment  Dirección de memoria (física)
      li.fragment  Número de sectores a transferir
  
    div Solicitudes son encoladas. 
    ul
      li.fragment  El orden en que son atendidas determina la latencia efectiva del controlador de disco

  section 
    div <b>Scheduling FCFS</b>
    
    div Justo, pero no necesariamente el de mejor servicio

    div 
      img src='/images/figures/03-10_04.pdf.png' style="background:none; border:none; box-shadow:none;" width="40%"

    div Medida de latencia: desplazamiento que debe hacer el brazo $=640$
  

  section 
    div <b>Scheduling SSTF</b>

    div <i>Shortest Seek Time First</i>

    div Busca el que esté más cerca de la posición actual

    div 
      img src='/images/figures/03-10_05.pdf.png' style="background:none; border:none; box-shadow:none;" width="40%"

    div Desplazamiento $=208$
    
    div No es óptimo, (¿por qué?)


  section 
    div <b>Scheduling SCAN</b>

    div <i>(a.k.a. el elevador)</i>

    div Brazo se mueve de un extremo a otro y sirve todo lo que encuentre en el camino ...
    
    div 
      img src='/images/figures/03-10_06.pdf.png' style="background:none; border:none; box-shadow:none;" width="40%"

    /div Desplazamiento \onslide<3->{$=$}


  section 
    div <b>Scheduling C-SCAN</b>

    div <i>(a.k.a. el elevador)</i>

    div Las solicitudes que llegan justo después que el brazo ha pasado "llevan más tiempo esperando"
    
    div Brazo llega a un extremo y se mueve completamente al extremo opuesto, para continuar en el mismo sentido

    div 
      img src='/images/figures/03-10_07.pdf.png' style="background:none; border:none; box-shadow:none;" width="40%"

    div Objetivo es disminuir el tiempo de espera de cada solicitud
    
    /%Desplazamiento \onslide<3->{$=$}


  section 
    div <b>Scheduling LOOK y C-LOOK</b>

    div Similares a SCAN y C-SCAN, pero no se mueven hasta los extremos si no es necesario

    div 
      img src='/images/figures/03-10_08.pdf.png' style="background:none; border:none; box-shadow:none;" width="40%"
  
section
  h2 RAID

  section 
    div <i>Redundant Array of Independent Disks</i>
    
    div Discos tienen <i>tasas de falla</i>
    
    ul
      li.fragment Disco que falla una vez cada $100000$ accesos
      li.fragment En un grupo de 100 discos falla uno cada $1000$ horas

    div Una manera simple de protegerse ante falla es la <b>redundancia</b>
    ul
      li.fragment Estrategia básica de redundancia: <b>mirroring</b>


  section
    
    ul
      li.fragment  <b>RAID 0</b>: Stripping
      li.fragment  <b>RAID 1</b>: Mirroring
      li.fragment  <b>RAID 2</b>: $N$ discos y $N-1$ parity bits
      li.fragment  <b>RAID 3</b>: $N$ discos $+ 1$ disco de paridad
      li.fragment  <b>RAID 4</b>: Paridad por bloques
      li.fragment  <b>RAID 5</b>: Paridad por bloques y distribuida
      li.fragment  <b>RAID 6</b>: RAID 5 + información adicional para soportar fallas de dos discos

    div 
      img src='/images/figures/03-10_11.pdf.png' style="background:none; border:none; box-shadow:none;" width="15%"


  section

    ul
      li.fragment  <b>RAID 0+1</b>: Stripe con mirroring
      ul
        li.fragment  Performance de RAID 0
        li.fragment  Confiabilidad de RAID 1
        li.fragment  Si falla un disco se pierde un <i>stripe</i>
    ul
      li.fragment  <b>RAID 1+0</b>: Mirror de pares de discos
      ul
       li.fragment  Si falla un disco se pierde solo un disco

    div 
      img src='/images/figures/03-10_12.pdf.png' style="background:none; border:none; box-shadow:none;" width="30%"

section
  h2 Sistemas de Archivos

  section 
    div <b>Archivos</b>

    div style="text-align:left;" Colección de información en almacenamiento secundario  
    ul.fragment style="text-align:left;"
      li Unidad mínima de almacenamiento para el usuario
      li Agrupación lógica de <i>bytes</i>
  
    div.fragment style="text-align:left;" Contenido: cualquier cosa
    ul
      li.fragment Significado está determinado por la forma en que se utiliza su contenido
      li.fragment Texto, imagen, código fuente, código binario (ejecutable), ...

  section
    div Caracterizando un archivo
    ul.fragment style="text-align:left;"
    li style="text-align:left;" Nombre (simbólico). Información human-readable
    li style="text-align:left;" Identificador. Determinado por el S.O.
    li style="text-align:left;" Tipo.
    li style="text-align:left;" Ubicación. Puntero a dirección de disco.
    li style="text-align:left;" Tamaño. Tamaño actual en bytes, words ó blocks. Puede incluir un tamaño máximo.
    li style="text-align:left;" Proteccion. Datos de control de acceso. Lecturas, escritura, ejecución.
    li style="text-align:left;" Fecha. Creación, acceso, modificación.
    li style="text-align:left;" Usuario. Propietario.
    li style="text-align:left;" Atributos extendidos (metadata)
    ul style="text-align:left;"
      li style="text-align:left;" Codificación, checksum, programas asociados

    div style="text-align:left;" Información de archivos de se almacena en la estructura de directorios.

  section
    div <b><i>Syscalls</i> para operaciones sobre archivos</b>

    ul
      li.fragment Creación
      li.fragment Escritura
      li.fragment Lectura
      li.fragment Reposicionamiento
      li.fragment Eliminación (borrar)
      li.fragment Reducción (truncar) 

  section 
    div <b>Archivos abiertos</b>

    div style="text-align:left;" Archivos se buscan en una estructura de directorio.

    div style="text-align:left;" Al <b>abrir</b> un archivo, se mantiene su información en una lista <b>lista de archivos abiertos</b>

    ul
      li.fragment <code>open()</code>. Al abrir un archivo se carga en esta lista una estructura con:
      ul
        li.fragment  Puntero de acceso. Desplazamiento <i>offset</i> desde el inicio del archivo.
        li.fragment  Cantidad de aperturas. Contador de cuántas veces se encuentra abierto.
        li.fragment  Ubicación en disco.
        li.fragment  Permisos de acceso.
      
      li.fragment <code>close()</code>. Cierra el archivo. Si nadie más lo está ocupando, es eliminado de la lista.

  section
    h3 Directorios

    div <b>¿Cómo encontrar archivos?</b>
  
    ul
      li.fragment  Sistemas de archivos mantienen <i>listas</i> de archivos y sus ubicaciones en bloques de disco
      li.fragment  Archivos se listan en una <b>tabla de contenidos</b> ó <b>directorio</b>
  
    div <b>Operaciones importantes</b>
    ul
      li.fragment  Buscar un archivo: <code>find</code>, <code>grep</code>, <code>locate</code>
      li.fragment  Agregar un archivo a directorio: <code>mv</code>, <code>cp</code>, <code>move</code>, <code>copy</code>
      li.fragment  Eliminar un archivo del directorio: <code>rm</code>, <code>del</code>
      li.fragment  Listar los archivo en un directorio: <code>ls</code>, <code>dir</code>
      li.fragment  Reubicar un archivo entre directorios: <code>mv</code>, <code>move</code>
      li.fragment  Navegar por los directorios: <code>cd</code>    

  section
    div <b>Acceso a archivos</b>

    div Secuencial ... o no-secuencial
  
    ul
      li.fragment  Archivos se abren con un <i>puntero</i> a la próxima ubicación que será leída/escrita
      li.fragment  Puntero inicializado en $0$
      li.fragment  <b>Acceso Secuencial</b> permite acceder a una posición a la vez
      li.fragment  <b>Acceso Directo</b> permite posicionar el puntero en cierta posición del archivo
      ul
        li.fragment  La estructura de almacenamiento de archivo debe permitirlo (sist. de archivos)

  section
    div <b>Árboles de directorios</b>

    ul
      li.fragment  Entradas en un directorio pueden ser archivos o directorios
      li.fragment  Camino desde la raíz al directorio: <b>ruta</b> ó <b>path</b>
      li.fragment  Cada proceso tiene un directorio actual: <b>current directory</b> (<code>pwd</code>)
      li.fragment  <b>Ruta absoluta</b>: Ruta desde la raíz.<br> Ej: <code>/spell/mail/exp</code>
      li.fragment  <b>Ruta relativa</b>: Ruta desde la ubicación actual (<i>current directory</i>).<br>Ej: <code>p/list</code> solo existe si el directorio actual es <code>/programs/</code>

    div 
      img src='/images/figures/03-11_11.pdf.png' style="background:none; border:none; box-shadow:none;" width="30%"

  section 
    div <b>Links</b>

    div Una manera sencilla de compartir archivos: que el mismo archivo pertenezca a dos directorios
    div 
      img src='/images/figures/03-11_12.pdf.png' style="background:none; border:none; box-shadow:none;" width="30%"

    ul
      li.fragment  Implementación usando <b>link</b>s
      ul
        li.fragment  <b>Symbolic links</b>: <i>link</i> a nombre de archivo (<code>ln -s</code>)
        li.fragment  <b>Hard link</b>: <i>link</i> a archivo (<code>ln</code>)
    
  section 
    div ¿Qué hacer al borrar un archivo?
    
    ul
      li.fragment <b>Symbolic links</b>. Si se borra el archivo original, el <i>link</i> sigue existiendo, y debe ser eliminado manualmente
    div 
      img src='/images/figures/03-deadlink.png' style="background:none; border:none; box-shadow:none;" width="30%"

    ul
      li.fragment <b>Hard links</b>. <i>Links</i> aumentan un contador de referencias el archivo. El archivo solo es eliminado cuando no quedan más referencias a él.

  section
    div <b>Montando sistemas de archivos</b>

    div style="text-align:left;" Para acceder a sistemas de archivos se necesita un <i>punto de acceso</i>, que asigna una posición de directorio a bloques de disco (por ejemplo, particiones)
    
    ul
      li.fragment  Operación <code>mount</code> hace que un sistema de archivos sea accesible desde un lugar conocido, como <b>mount point</b>
      li.fragment  Ejecución: <code>mount /users /device/disk2</code>

    div 
      img src='/images/figures/03-11_14.pdf.png' style="background:none; border:none; box-shadow:none;" width="30%"
      img src='/images/figures/03-11_15.pdf.png' style="background:none; border:none; box-shadow:none;" width="20%"

section
  h2 Implementación de sistemas de archivos

  section 
    div El <b>sistema de archivos</b> permite obtener una dirección de disco (un <i>bloque</i>) a partir de un conjunto de datos simbólicos: nombre de archivo, directorio, rutas, links, ...
  
    ul
      li.fragment  ISO9660 (CD-ROMs)
      li.fragment  UFS: Unix File System, basado Berkeley Fast File System (FFS)
      li.fragment  FAT, FAT32, NTFS: Windows
      li.fragment  ext3, ext4: Linux
      li.fragment  GFS, FUSE

  section

    ul
      li.fragment <b>Boot Control Block</b>. Uno por volumen. Permite utilizar el sistema de archivo para arranque.
      ul
        li.fragment Unix: Boot block
        li.fragment Windows: Partition Boot Sector

      li.fragment <b>Volume Control Block</b>. Contiene datos de formato de la partición.
      ul
        li.fragment  Unix: Superblock
        li.fragment  Windows: Master File Table

      li.fragment  Estructura de directorio. Ubicaciones de archivos.
      li.fragment  <b>File Control Block</b>. Uno por archivo. Contiene atributos de archivo.

    div 
      img src='/images/figures/03-12_02.pdf.png' style="background:none; border:none; box-shadow:none;" width="30%"

  section
    div Estructuras en memoria principal
    ul
      li.fragment  <b>Mount table</b>. Tabla de sistema de archivos montados.
      li.fragment  Directorios recientes
      li.fragment  Tabla de archivos abiertos en el sistema
      li.fragment  Tabla de archivos abiertos por proceso
      li.fragment  Buffers de bloques de disco

  
    div 
      img src='/images/figures/03-12_03.pdf.png' style="background:none; border:none; box-shadow:none;" width="30%"

  section 
    h3 Asignación de bloques

    div Cada archivo requiere utilizar bloques de disco
  
    ul
      li.fragment  Bloques deben ser asignados de manera eficiente
      li.fragment  Mala asignación provocará demoras en tiempos de acceso
      li.fragment  Estrategias de asignación de bloques

  section
    h3 Asignación contigua

    ul
      li.fragment  Archivo de $n$ bloques: $b, b+1, \ldots b+n-1$
      li.fragment  Fácil de acceder a siguiente bloque
      li.fragment  -Problema: fragmentación externa
      li.fragment  Require operaciones de <b>compactación</b> (defragmentación)

    div 
      img src='/images/figures/03-12_05.pdf.png' style="background:none; border:none; box-shadow:none;" width="25%"

  section
    h3 Asignación enlazada (<i>linked</i>)

    ul
      li.fragment  Almacena punteros a bloque siguiente
      li.fragment  Ej: bloque de 512 bytes, solo puede guardar 508 bytes. Se pierde espacion.
      li.fragment  No requiere tamaño inicial de archivo. Puede crecer.
      li.fragment  -Acceso solo secuencial.
      li.fragment  Alternativa: almacenar <i>clusters</i> de bloques en lugar de bloques individuales (frag. interna)
      li.fragment  -Vulnerable a falla de un bloque

    div 
      img src='/images/figures/03-12_06.pdf.png' style="background:none; border:none; box-shadow:none;" width="20%"
  
  section
    h3 Asignación enlazada (<i>linked</i>): FAT

    ul
      li.fragment  FAT: <b>File Allocation Table</b>
      li.fragment  Tabla al inicio del disco con una entrada por archivo
      li.fragment  Último cluster almacena EOF (<i>end-of-file</i>)
      li.fragment  +Mejor acceso aleatorio
      li.fragment  -Limitado por tamaño de tabla (para FAT32, 4GB por archivo)
    div 
      img src='/images/figures/03-12_07.pdf.png' style="background:none; border:none; box-shadow:none;" width="30%"
  
  section
    h3 Asignación indexada
    ul
      li.fragment  Archivos contienen <i>index block</i>
      li.fragment  <i>Index Block</i> contiene bloques del archivo
      li.fragment  Último cluster almacena EOF (<i>end-of-file</i>)
      li.fragment  +Acceso aleatorio sin frag. externa
      li.fragment  Se pierde espacio por tamaño de <i>index block</i>
    div 
      img src='/images/figures/03-12_08.pdf.png' style="background:none; border:none; box-shadow:none;" width="30%"

  section
    h3 Asignación indexada: tamaño del <i>index block</i>

    ul
      li.fragment  <b>Esquema enlazado</b>: última entrada de <i>index block</i> apunta a otro <i>index block</i>
      li.fragment  <b>Índice multinivel</b>: similar a tablas de página multinivel
      ul
        li.fragment  Ej: blocks de 4KB, permiten 1024 punteros (de 32-bit)
        li.fragment  Dos niveles permiten direccionar $1048576$ bloques $\to 4$GB

      li.fragment  <b>Esquema combinado</b>: primeros $p$ punteros son bloques directos, los siguientes apuntan a bloque de índice simple, los siguientes a bloque de índice doble, etc
    div 
      img src='/images/figures/03-12_09.pdf.png' style="background:none; border:none; box-shadow:none;" width="25%"

  section
    h3 Espacio libre

    div ¿Cómo encontrar bloques libres?

    div <b>Bit vector</b> ó <b>bitmap</b> de bloques libres
  
    ul
      li.fragment  +Sencillo, eficiente, e implementable en <i>hardware</i>
      li.fragment  -No escala tan bien
      ul
        li.fragment  Disco de 1.3GB, con bloques de 512 byte $\to 332$KB
        li.fragment  Disco de 1TB, con bloques de 4KB $\to 256$MB 

  section
    h3 Espacio libre

    div <b>Lista enlazada</b>
    ul
      li.fragment  Punteros a bloques libres
      li.fragment  Bloques nuevos se agregan a la lista
      li.fragment  -Poco eficiente
      li.fragment  Mejora: agrupar espacios contiguos
      li.fragment  Mantener punteros a espacios libres + número de espacios contiguos
    div 
      img src='/images/figures/03-12_10.pdf.png' style="background:none; border:none; box-shadow:none;" width="20%"



